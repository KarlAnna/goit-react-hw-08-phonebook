{"version":3,"file":"static/js/139.03fe5c58.chunk.js","mappings":"oVAMaA,EAAe,WAExB,OAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAAgCR,EAAAA,EAAAA,UAAS,IAAzC,eAAOS,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GAClB,MAAwBA,EAAEC,OAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,OAAQT,GACJ,IAAK,OAAQC,EAAQQ,GACjB,MACJ,IAAK,QAASN,EAASM,GACnB,MACJ,IAAK,WAAYJ,EAAYI,GACzB,MACJ,QAAS,OAEhB,EAUD,OACI,UAACC,EAAA,EAAD,CAAKC,SATiB,SAACJ,GACvBA,EAAEK,iBACFd,GAASe,EAAAA,EAAAA,IAAS,CAAEb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACf,EAGqCS,UAAU,OAAOC,GAAI,CAAEC,QAAQ,OAAQC,cAAc,SAAUC,IAAI,OAAQC,QAAS,UAAtH,WACI,SAACC,EAAA,EAAD,CACIC,SAAUf,EACVgB,UAAQ,EACRC,KAAK,OACLvB,KAAK,OACLS,MAAOT,EACPwB,MAAM,OACNC,YAAY,qBAEhB,SAACL,EAAA,EAAD,CACIC,SAAUf,EACVgB,UAAQ,EACRC,KAAK,QACLvB,KAAK,QACLS,MAAOP,EACPsB,MAAM,QACNC,YAAY,sBAEhB,UAACC,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAYC,QAAQ,8BAApB,uBACA,SAACC,EAAA,EAAD,CACIR,SAAUf,EACVgB,UAAQ,EACRC,KAAM3B,EAAe,OAAS,WAC9BI,KAAK,WACLS,MAAOL,EACPoB,MAAM,WACNM,GAAG,8BACHL,YAAY,sBACZM,cACI,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACI,SAACC,EAAA,EAAD,CACI,aAAW,6BACXC,QAAS,kBAAMtC,GAAgB,SAACuC,GAAD,OAAWA,CAAX,GAAtB,EACTC,KAAK,MAHT,SAKCzC,GAAe,SAAC0C,EAAA,EAAD,KAAoB,SAACC,EAAA,EAAD,cAMpD,SAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYlB,KAAK,SAAjC,sBAGX,ECxED,EARiB,WACb,OACI,+BACI,SAAC7B,EAAD,KAGX,C","sources":["components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { register } from \"redux/auth/authOperations\"\nimport { FormControl, TextField, OutlinedInput, InputLabel, Box, InputAdornment, IconButton, Button } from \"@mui/material\"\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\"\n\nexport const RegisterForm = () => {\n\n    const [showPassword, setShowPassword] = useState(false)\n    const dispatch = useDispatch()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        switch (name) {\n            case 'name': setName(value)\n                break\n            case 'email': setEmail(value)\n                break\n            case 'password': setPassword(value)\n                break\n            default: return\n        }\n    }\n\n    const formSubmitHandler = (e) => {\n        e.preventDefault()\n        dispatch(register({ name, email, password }))\n        setName('')\n        setEmail('')\n        setPassword('')\n    }\n\n    return (\n        <Box onSubmit={formSubmitHandler} component='form' sx={{ display:'flex', flexDirection:'column', gap:'1rem', padding: '2rem 0'}}>\n            <TextField\n                onChange={handleChange}\n                required\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                label=\"Name\"\n                placeholder=\"Enter your name\"\n            />\n            <TextField\n                onChange={handleChange}\n                required\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                label=\"Email\"\n                placeholder=\"Enter your email\"\n            />\n            <FormControl>\n                <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                <OutlinedInput\n                    onChange={handleChange}\n                    required\n                    type={showPassword ? \"text\" : \"password\"}\n                    name=\"password\"\n                    value={password}\n                    label=\"Password\"\n                    id=\"outlined-adornment-password\"\n                    placeholder=\"Enter your password\"\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={() => setShowPassword((prev) => !prev)}\n                                edge=\"end\"\n                            >\n                            {showPassword ? <VisibilityOff /> : <Visibility />}\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                />\n            </FormControl>\n            <Button variant=\"contained\" type=\"submit\">Submit</Button>\n        </Box>\n    )\n}","import { RegisterForm } from \"components/RegisterForm/RegisterForm\"\n\nconst Register = () => {\n    return (\n        <>\n            <RegisterForm />\n        </>\n    )\n}\n\nexport default Register"],"names":["RegisterForm","useState","showPassword","setShowPassword","dispatch","useDispatch","name","setName","email","setEmail","password","setPassword","handleChange","e","target","value","Box","onSubmit","preventDefault","register","component","sx","display","flexDirection","gap","padding","TextField","onChange","required","type","label","placeholder","FormControl","InputLabel","htmlFor","OutlinedInput","id","endAdornment","InputAdornment","position","IconButton","onClick","prev","edge","VisibilityOff","Visibility","Button","variant"],"sourceRoot":""}